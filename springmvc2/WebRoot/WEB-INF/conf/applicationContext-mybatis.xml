<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
   http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
   http://www.springframework.org/schema/data/jpa
   http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd
    http://www.springframework.org/schema/util   
   http://www.springframework.org/schema/util/spring-util-3.0.xsd">


	<context:annotation-config />

	<context:component-scan base-package="org.tang.jpa" />

	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<!-- 
		<property name="url" value="jdbc:oracle:thin:@localhost:1523:orcl" />
		<property name="url" value="jdbc:oracle:thin:@192.168.2.213:1521:orcl" />
		 -->
		<property name="url" value="jdbc:oracle:thin:@localhost:1523:orcl" />
		<property name="username" value="exam" />
		<property name="password" value="exam" />

		<property name="filters" value="stat" />
		<property name="queryTimeout" value="60000" />
		<property name="maxActive" value="20" />
		<property name="initialSize" value="10" />
		<property name="maxWait" value="60000" />
		<property name="minIdle" value="4" />

		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<property name="minEvictableIdleTimeMillis" value="300000" />

		<property name="validationQuery" value="SELECT 'x' from dual " />
		<property name="testWhileIdle" value="true" />
		<property name="connectionErrorRetryAttempts" value="5" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize"
			value="20" />
	</bean>


	<!--配置 myBatis文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		 <property name="configLocation" value="classpath:org/tang/jpa/config/mybatis-config.xml"/>
	</bean>
	
	<!--扫描myBatis接口-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!--basePackage指定要扫描的包，可指定多个包，包与包之间用逗号或分号分隔-->
		<property name="basePackage" value="org.tang.jpa.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/> 
	</bean>
	<!--定义声明式的事务管理器-->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!--使用注解式事务声明-->
	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />
</beans>
